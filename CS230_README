•	Briefly summarize The Gaming Room client and their software requirements. Who was the client? What type of software did they want you to design?
    The Client is The Gaming Room they have a game application called Draw It or Lose It that was created for Android systems. The Gaming Room asked us to evaluate the three traditional operation platforms (Linux, Mac, and Windows), as well as mobile platforms to see what is required to deploy, develop, and run their application.

•	What did you do particularly well in developing this documentation?
    I did a great job at providing all the necessary information needed for The Gaming Room to plan a course of action. I’m particularly proud of the information I provided in the Development Requirements and Recommendation sections.

•	What about the process of working through a design document did you find helpful when developing the code?
    The Executive Summary allowed me to identify the Design Constraints, the Domain Model & UML Diagram also helped me put together the class objects.

•	If you could choose one part of your work on these documents to revise, what would you pick? How would you improve it?
    I could potentially add more to the Design Constraints by including the 30 second buffering of the image, The 1-minute time limit per round, and the 15 second chance for the other team to guess. 

•	How did you interpret the user’s needs and implement them into your software design? Why is it so important to consider the user’s needs when designing?
    Because we’re doing analysis on how to build for multiple platforms. It’s important to consider how to deliver a solution that any user can access regardless of hardware. The user experience is important to consider because if the user has a bad experience with our software, they will never want to use it again.

•	How did you approach designing software? What techniques or strategies would you use in the future to analyze and design a similar software application?
    Through the lessons I learned in this class and in the Hands-On Design Patterns with Java textbook. I was able to learn and use the Iterator pattern and the Singleton pattern to design parts of this software. In the future, I would use similar techniques and incorporate other patterns where necessary. 
